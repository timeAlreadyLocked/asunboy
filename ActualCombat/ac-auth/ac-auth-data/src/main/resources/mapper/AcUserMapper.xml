<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.asunboy.auth.data.AcUserMapper" >
  <resultMap id="BaseResultMap" type="cn.asunboy.auth.entity.AcUser" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="TINYINT" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="TINYINT" />
    <result column="login_pwd" property="loginPwd" jdbcType="VARCHAR" />
    <result column="pwd_fail_times" property="pwdFailTimes" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="locked_on" property="lockedOn" jdbcType="TIMESTAMP" />
    <result column="last_login_on" property="lastLoginOn" jdbcType="TIMESTAMP" />
    <result column="created_on" property="createdOn" jdbcType="TIMESTAMP" />
    <result column="modified_on" property="modifiedOn" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.asunboy.auth.entity.AcUser" extends="BaseResultMap" >
    <result column="text" property="text" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, nickname, name, age, sex, mobile, type_id, login_pwd, pwd_fail_times, status, 
    locked_on, last_login_on, created_on, modified_on
  </sql>
  <sql id="Blob_Column_List" >
    text
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.asunboy.auth.entity.AcUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ac_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.asunboy.auth.entity.AcUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ac_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ac_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ac_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.asunboy.auth.entity.AcUserExample" >
    delete from ac_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.asunboy.auth.entity.AcUser" >
    insert into ac_user (id, nickname, name, 
      age, sex, mobile, type_id, 
      login_pwd, pwd_fail_times, status, 
      locked_on, last_login_on, created_on, 
      modified_on, text)
    values (#{id,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{age,jdbcType=TINYINT}, #{sex,jdbcType=BIT}, #{mobile,jdbcType=VARCHAR}, #{typeId,jdbcType=TINYINT}, 
      #{loginPwd,jdbcType=VARCHAR}, #{pwdFailTimes,jdbcType=TINYINT}, #{status,jdbcType=CHAR}, 
      #{lockedOn,jdbcType=TIMESTAMP}, #{lastLoginOn,jdbcType=TIMESTAMP}, #{createdOn,jdbcType=TIMESTAMP}, 
      #{modifiedOn,jdbcType=TIMESTAMP}, #{text,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.asunboy.auth.entity.AcUser" >
    insert into ac_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="loginPwd != null" >
        login_pwd,
      </if>
      <if test="pwdFailTimes != null" >
        pwd_fail_times,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="lockedOn != null" >
        locked_on,
      </if>
      <if test="lastLoginOn != null" >
        last_login_on,
      </if>
      <if test="createdOn != null" >
        created_on,
      </if>
      <if test="modifiedOn != null" >
        modified_on,
      </if>
      <if test="text != null" >
        text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=TINYINT},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=TINYINT},
      </if>
      <if test="loginPwd != null" >
        #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="pwdFailTimes != null" >
        #{pwdFailTimes,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="lockedOn != null" >
        #{lockedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginOn != null" >
        #{lastLoginOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createdOn != null" >
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedOn != null" >
        #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="text != null" >
        #{text,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.asunboy.auth.entity.AcUserExample" resultType="java.lang.Integer" >
    select count(*) from ac_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ac_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=TINYINT},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=TINYINT},
      </if>
      <if test="record.loginPwd != null" >
        login_pwd = #{record.loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.pwdFailTimes != null" >
        pwd_fail_times = #{record.pwdFailTimes,jdbcType=TINYINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.lockedOn != null" >
        locked_on = #{record.lockedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginOn != null" >
        last_login_on = #{record.lastLoginOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdOn != null" >
        created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedOn != null" >
        modified_on = #{record.modifiedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.text != null" >
        text = #{record.text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update ac_user
    set id = #{record.id,jdbcType=BIGINT},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=TINYINT},
      sex = #{record.sex,jdbcType=BIT},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=TINYINT},
      login_pwd = #{record.loginPwd,jdbcType=VARCHAR},
      pwd_fail_times = #{record.pwdFailTimes,jdbcType=TINYINT},
      status = #{record.status,jdbcType=CHAR},
      locked_on = #{record.lockedOn,jdbcType=TIMESTAMP},
      last_login_on = #{record.lastLoginOn,jdbcType=TIMESTAMP},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      modified_on = #{record.modifiedOn,jdbcType=TIMESTAMP},
      text = #{record.text,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ac_user
    set id = #{record.id,jdbcType=BIGINT},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=TINYINT},
      sex = #{record.sex,jdbcType=BIT},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=TINYINT},
      login_pwd = #{record.loginPwd,jdbcType=VARCHAR},
      pwd_fail_times = #{record.pwdFailTimes,jdbcType=TINYINT},
      status = #{record.status,jdbcType=CHAR},
      locked_on = #{record.lockedOn,jdbcType=TIMESTAMP},
      last_login_on = #{record.lastLoginOn,jdbcType=TIMESTAMP},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      modified_on = #{record.modifiedOn,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.asunboy.auth.entity.AcUser" >
    update ac_user
    <set >
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=TINYINT},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=TINYINT},
      </if>
      <if test="loginPwd != null" >
        login_pwd = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="pwdFailTimes != null" >
        pwd_fail_times = #{pwdFailTimes,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="lockedOn != null" >
        locked_on = #{lockedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginOn != null" >
        last_login_on = #{lastLoginOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createdOn != null" >
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedOn != null" >
        modified_on = #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.asunboy.auth.entity.AcUser" >
    update ac_user
    set nickname = #{nickname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=TINYINT},
      sex = #{sex,jdbcType=BIT},
      mobile = #{mobile,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=TINYINT},
      login_pwd = #{loginPwd,jdbcType=VARCHAR},
      pwd_fail_times = #{pwdFailTimes,jdbcType=TINYINT},
      status = #{status,jdbcType=CHAR},
      locked_on = #{lockedOn,jdbcType=TIMESTAMP},
      last_login_on = #{lastLoginOn,jdbcType=TIMESTAMP},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      modified_on = #{modifiedOn,jdbcType=TIMESTAMP},
      text = #{text,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.asunboy.auth.entity.AcUser" >
    update ac_user
    set nickname = #{nickname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=TINYINT},
      sex = #{sex,jdbcType=BIT},
      mobile = #{mobile,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=TINYINT},
      login_pwd = #{loginPwd,jdbcType=VARCHAR},
      pwd_fail_times = #{pwdFailTimes,jdbcType=TINYINT},
      status = #{status,jdbcType=CHAR},
      locked_on = #{lockedOn,jdbcType=TIMESTAMP},
      last_login_on = #{lastLoginOn,jdbcType=TIMESTAMP},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      modified_on = #{modifiedOn,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>