<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="asunboy.service.lock.mapper.AppMapper">
  <resultMap id="BaseResultMap" type="asunboy.service.lock.model.App">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="platform" jdbcType="CHAR" property="platform" />
    <result column="app_key" jdbcType="VARCHAR" property="appKey" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="modified_on" jdbcType="TIMESTAMP" property="modifiedOn" />
    <result column="modified_by" jdbcType="BIGINT" property="modifiedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, platform, app_key, name, description, created_on, created_by, modified_on, modified_by
  </sql>
  <select id="selectByExample" parameterType="asunboy.service.lock.mapper.AppExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from app
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from app
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="asunboy.service.lock.mapper.AppExample">
    delete from app
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="asunboy.service.lock.model.App">
    insert into app (id, platform, app_key, 
      name, description, created_on, 
      created_by, modified_on, modified_by
      )
    values (#{id,jdbcType=INTEGER}, #{platform,jdbcType=CHAR}, #{appKey,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{createdOn,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=BIGINT}, #{modifiedOn,jdbcType=TIMESTAMP}, #{modifiedBy,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="asunboy.service.lock.model.App">
    insert into app
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="platform != null">
        platform,
      </if>
      <if test="appKey != null">
        app_key,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdOn != null">
        created_on,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="modifiedOn != null">
        modified_on,
      </if>
      <if test="modifiedBy != null">
        modified_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="platform != null">
        #{platform,jdbcType=CHAR},
      </if>
      <if test="appKey != null">
        #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedOn != null">
        #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        #{modifiedBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="asunboy.service.lock.mapper.AppExample" resultType="java.lang.Long">
    select count(*) from app
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update app
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.platform != null">
        platform = #{record.platform,jdbcType=CHAR},
      </if>
      <if test="record.appKey != null">
        app_key = #{record.appKey,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createdOn != null">
        created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedOn != null">
        modified_on = #{record.modifiedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedBy != null">
        modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update app
    set id = #{record.id,jdbcType=INTEGER},
      platform = #{record.platform,jdbcType=CHAR},
      app_key = #{record.appKey,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      created_on = #{record.createdOn,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      modified_on = #{record.modifiedOn,jdbcType=TIMESTAMP},
      modified_by = #{record.modifiedBy,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="asunboy.service.lock.model.App">
    update app
    <set>
      <if test="platform != null">
        platform = #{platform,jdbcType=CHAR},
      </if>
      <if test="appKey != null">
        app_key = #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdOn != null">
        created_on = #{createdOn,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedOn != null">
        modified_on = #{modifiedOn,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        modified_by = #{modifiedBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="asunboy.service.lock.model.App">
    update app
    set platform = #{platform,jdbcType=CHAR},
      app_key = #{appKey,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=BIGINT},
      modified_on = #{modifiedOn,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="asunboy.service.lock.mapper.AppExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from app
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into app
    (id, platform, app_key, name, description, created_on, created_by, modified_on, modified_by
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.platform,jdbcType=CHAR}, #{item.appKey,jdbcType=VARCHAR}, 
        #{item.name,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}, #{item.createdOn,jdbcType=TIMESTAMP}, 
        #{item.createdBy,jdbcType=BIGINT}, #{item.modifiedOn,jdbcType=TIMESTAMP}, #{item.modifiedBy,jdbcType=BIGINT}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into app (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'platform'.toString() == column.value">
          #{item.platform,jdbcType=CHAR}
        </if>
        <if test="'app_key'.toString() == column.value">
          #{item.appKey,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'description'.toString() == column.value">
          #{item.description,jdbcType=VARCHAR}
        </if>
        <if test="'created_on'.toString() == column.value">
          #{item.createdOn,jdbcType=TIMESTAMP}
        </if>
        <if test="'created_by'.toString() == column.value">
          #{item.createdBy,jdbcType=BIGINT}
        </if>
        <if test="'modified_on'.toString() == column.value">
          #{item.modifiedOn,jdbcType=TIMESTAMP}
        </if>
        <if test="'modified_by'.toString() == column.value">
          #{item.modifiedBy,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <update id="updateBySelectiveBatch" parameterType="map">
    <foreach collection="list" index="index" item="item" separator=";">
      update app
      <set>
        <if test="item.platform != null">
          platform = #{item.platform,jdbcType=CHAR},
        </if>
        <if test="item.appKey != null">
          app_key = #{item.appKey,jdbcType=VARCHAR},
        </if>
        <if test="item.name != null">
          name = #{item.name,jdbcType=VARCHAR},
        </if>
        <if test="item.description != null">
          description = #{item.description,jdbcType=VARCHAR},
        </if>
        <if test="item.createdOn != null">
          created_on = #{item.createdOn,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createdBy != null">
          created_by = #{item.createdBy,jdbcType=BIGINT},
        </if>
        <if test="item.modifiedOn != null">
          modified_on = #{item.modifiedOn,jdbcType=TIMESTAMP},
        </if>
        <if test="item.modifiedBy != null">
          modified_by = #{item.modifiedBy,jdbcType=BIGINT},
        </if>
      </set>
       where 
      <choose>
        <when test="selective != null and selective.length > 0">
          <foreach collection="selective" item="column" separator="and">
            <if test="'id'.toString() == column.value">
              ${column.escapedColumnName} = 
              #{item.id,jdbcType=INTEGER}
            </if>
            <if test="'platform'.toString() == column.value">
              ${column.escapedColumnName} = 
              #{item.platform,jdbcType=CHAR}
            </if>
            <if test="'app_key'.toString() == column.value">
              ${column.escapedColumnName} = 
              #{item.appKey,jdbcType=VARCHAR}
            </if>
            <if test="'name'.toString() == column.value">
              ${column.escapedColumnName} = 
              #{item.name,jdbcType=VARCHAR}
            </if>
            <if test="'description'.toString() == column.value">
              ${column.escapedColumnName} = 
              #{item.description,jdbcType=VARCHAR}
            </if>
            <if test="'created_on'.toString() == column.value">
              ${column.escapedColumnName} = 
              #{item.createdOn,jdbcType=TIMESTAMP}
            </if>
            <if test="'created_by'.toString() == column.value">
              ${column.escapedColumnName} = 
              #{item.createdBy,jdbcType=BIGINT}
            </if>
            <if test="'modified_on'.toString() == column.value">
              ${column.escapedColumnName} = 
              #{item.modifiedOn,jdbcType=TIMESTAMP}
            </if>
            <if test="'modified_by'.toString() == column.value">
              ${column.escapedColumnName} = 
              #{item.modifiedBy,jdbcType=BIGINT}
            </if>
          </foreach>
        </when>
        <otherwise>
          id = #{item.id,jdbcType=INTEGER}
        </otherwise>
      </choose>
    </foreach>
  </update>
  <update id="updateBatch">
    <foreach collection="list" index="index" item="item" separator=";">
      <if test="item.id != null">
        update app
        set platform = #{item.platform,jdbcType=CHAR},
          app_key = #{item.appKey,jdbcType=VARCHAR},
          name = #{item.name,jdbcType=VARCHAR},
          description = #{item.description,jdbcType=VARCHAR},
          created_on = #{item.createdOn,jdbcType=TIMESTAMP},
          created_by = #{item.createdBy,jdbcType=BIGINT},
          modified_on = #{item.modifiedOn,jdbcType=TIMESTAMP},
          modified_by = #{item.modifiedBy,jdbcType=BIGINT}
        where id = #{item.id,jdbcType=INTEGER}
      </if>
    </foreach>
  </update>
  <update id="updateNullByExampleSelective" parameterType="map">
    update app
    <set>
      <foreach collection="columns" item="column" separator=",">
        ${column.escapedColumnName} = null
      </foreach>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>